*dk viscalc
	subroutine viscalc(vvsc,temp,u,w)
!	This routine computes the variation of the dynamic viscosity.
!
!	The temperature- and pressure-dependent viscosity variation is
!	given by the relation
! 
!							vvsc = exp((E + p*V)/RT)
!
!	where E is the activation energy and V is the activation volume.

	include 'size.h'

	common /strn/ srate((nt+1)**2*nd,nr+1)
	common /prop/ ieos,  rho0, visc,  grav,  texpn, tcond,
     &              sheat, hgen, tb(2), cl410, cl660
	common /heat/ htop, hbot, hrad, heat, hshr, hvol, hnet, tnrm,
     &              tav(129), qc(128)
	common /vis1/ vscmax, rvscscl, tvscscl, pwrlawn, pwrlawsr, yldstrs
	common /vis2/ rdvsc(129), tactv(129), vscl(129)
	common /radl/ rshl(nr+1), ird                                        
	common /call/ ncall
	common /clck/ itmng, sec(50)

	real vvsc((nt+1)**2*nd,*), w((nt+1)**2*nd,*)
	real temp((nt+1)**2*nd,*)

	if(itmng==1) call mytime(tin)
 
	do ir=1,nr+1
		do ii=1,(nt+1)**2*nd
			vvsc(ii,ir) = rdvsc(ir)
		enddo
	enddo
 
	if(tvscscl>0.0) then
 
c        call tectos(vvsc,map2)
c        if(yldstrs .gt. 0.) call weakzones(vvsc,u,w)
c        if(nt .gt. 0) return
 
         if(pwrlawn*pwrlawsr .gt. 0.) then
            call strainrate(u,w,w(1,10))
            rexp = 1./pwrlawn
            qexp = rexp - 1.
         end if
 
         do ir=1,nr+1
 
            tempmin = 1000.
            tempmax = 3000.
 
            jr = max(ir, nr/32+1)
            a1 = vscl(jr)*tactv(jr)
            if(ir .le. nr/32+1) tempmin = 1500.
            a2 = a1/max(tempmin, min(tempmax, tav(jr)))
 
            if(pwrlawn*pwrlawsr.eq.0. .or. ir.gt.nr/16) then
 
               do ii=1,(nt+1)**2*nd
                  aa = a1/max(tempmin, min(tempmax, temp(ii,jr))) - a2
                  vvsc(ii,ir) = min(vscmax, rdvsc(ir)*exp(aa))
               end do
 
            else
 
               rsrt = 1./pwrlawsr
 
               do ii=1,(nt+1)**2*nd
                  aa = a1/max(tempmin, min(tempmax, temp(ii,jr))) - a2
                  v1 = exp(aa)
                  v2 = max(1.e-10, rsrt*abs(srate(ii,ir)))
                  v2 = v2**qexp
                  v2 = v2*exp(rexp*aa)
                  vvsc(ii,ir) = min(vscmax, rdvsc(ir)*v1*v2/(v1 + v2))
               end do
 
            endif
 
         end do
 
c        do ii=1,(nt+1)**2*nd
c           vvsc(ii,1)    = min(vvsc(ii,1),    vvsc(ii,2))
c           vvsc(ii,nr+1) = max(vvsc(ii,nr+1), vvsc(ii,nr))
c        end do
 
         if(yldstrs .gt. 0.) call weakzones(vvsc,u,w)
 
      endif

	if(itmng==1) then
		call mytime(tout)
		sec(18) = sec(18) + tout - tin
	endif

	end subroutine


*dk viscset
      subroutine viscset
 
c     This routine computes an effective activation temperature
c     distribution with respect to depth in the spherical shell.
 
c     The temperature- and pressure-dependent viscosity variation is
c     given by the relation
 
c                      vvis = exp((E + p*V)/RT)
 
c     where E is the activation energy and V is the activation volume.
 
      include 'size.h'
      include 'pcom.h'
      real eactv(129), vactv(129)
      common /radl/ rshl(nr+1), ird
      common /prop/ ieos,  rho0, visc,  grav,  texpn, tcond,
     &              sheat, hgen, tb(2), cl410, cl660
      common /heat/ htop, hbot, hrad, heat, hshr, hvol, hnet, tnrm,
     &              tav(129), qc(128)
      common /vis1/ vscmax, rvscscl, tvscscl, pwrlawn, pwrlawsr, yldstrs
      common /vis2/ rdvsc(129), tactv(129), vscl(129)
      common /vis3/ rvsc(129,5)
      common /eos1/ rhorf(129), tmprf(129), drhdp(129), grv(129)
      common /eos2/ rhocv(129), gamma(129), alpha(129), prf(129),
     &               cond(129)
      common /call/ ncall
 
      do ir=1,nr+1
         rdvsc(ir) = 1.
      end do
 
      if(vscmax  .eq. 0.) return
 
      tref = 2000.
 
      if(rvscscl .lt. 0.) then
 
c        Read in the radial viscosity variation from array 'rvsc'
c        which is loaded via a data statement.
 
         lvr = 1.45*log(real(nr))
 
         do ir=1,nr+1
            rdvsc(ir) = rvsc(ir,lvr-2)
            vscl(ir)  = tvscscl
            tactv(ir) = 500.e03/8.31434
         end do
 
      else
 
c        Generate the viscosity parameters for a model based on
c        activation energy and activation volume.
 
         lm = max(4, nr/4)
 
         do ir=1,nr+1
 
            if(ieos .eq. 1) then
 
c              Use constant activation energy and activation volume
c              for incompressible case.
 
               eactv(ir) = 500.e03
               vactv(ir) = 1.50e-6
 
            elseif(ieos/10 .eq. 3) then
 
c              Set activation energy and volume for the
c              Adams-Williamson EOS model of the earth's mantle.
 
               eactv(ir) = 500.e03
               vactv(ir) = 6.00e-6
 
            else
 
c              Set activation energy and volume for the Morse and
c              Murnaghan models of the earth's mantle.
 
               if(ieos/10 .eq. 1) tref = 2100.
               if(ieos/10 .eq. 2) tref = 2200.
 
               depth = rshl(1) - rshl(ir)
 
               if(depth .lt. 660.e3) then
 
                  eactv(ir) = 500.e03
                  vactv(ir) =  10.e-6
                  if(depth .ge. 410.e3) then
                     eactv(ir) = 555.e03
                     vactv(ir) =  6.0e-6
                  endif
 
               else
 
c                 (Variable 'lm' identifies the topmost value
c                 of 'ir' for the lower mantle.)
 
                  if(lm .eq. nr/4) lm = ir
                  eactv(ir) = 640.e03
                  vactv(ir) =  2.8e-6
 
               endif
 
            endif
 
            tactv(ir) = (eactv(ir) + prf(ir)*vactv(ir))/8.31434
 
         end do
 
         clip   = 0.
         vsmin  = 1.e10
         vscnrm = tactv(lm)/tref
 
         do ir=nr+1,1,-1
 
            avtemp    = max(1100., tav(ir))
            rdvsc(ir) = exp(rvscscl*(tactv(ir)/avtemp - vscnrm))
            if(ir .le. nr/4) vsmin = min(vsmin, rdvsc(ir))
            vscl(ir)  = tvscscl
 
            if(ir.lt.nr/4 .and. rdvsc(ir).gt.vsmin) then
 
               if(clip.eq.0. .and. rdvsc(ir).gt.100.*vsmin) then
                  clip  = 1.
                  factr = min(25., (vscmax/rdvsc(ir+1))**(1./ir))
               end if
 
               if(clip .eq. 1.) rdvsc(ir) = factr*rdvsc(ir+1)
 
            end if
 
         end do
 
         if(mynum.eq.0 .and. mod(ncall,100).eq.0)
     &      write(6,10) (vscl(ir),ir=1,nr+1)
 10      format('VSCL:  ',9f7.4/7x,9f7.4)
 
      endif

	end subroutine


*dk viscsmth
	subroutine viscsmth(vv,w)
!	This routine limits the local second derivative of the viscosity
!	field vv to a specified positive value.
 
      include 'size.h'
      include 'pcom.h'
      real vv(0:nt,nt+1,nd,nr+1), w(0:nt,nt+1,nd,nr+1), a(7,0:nt,nt+1)
 
      iq    = mt/nt
      iproc = mod(mynum, mproc)
 
      call vecset(a, 1./6., (nt+1)**2*7)
 
      call subarraybc1(a,nt)
 
      if(iproc .eq. 0) a(2,0,1) = 0.2
      if(iproc .eq. iq-1) then
         a(3,nt,1) = 0.2
         a(4,nt,1) = 0.2
         a(5,nt,1) = 0.2
      end if
      if(iproc .eq. mproc-1)  a(6,nt,nt+1) = 0.2
      if(iproc .eq. mproc-iq) a(7, 0,nt+1) = 0.2
 
      do ir=1,nr+1
         do id=1,nd
            do i2=1,nt+1
               do i1=0,nt
                  w(i1,i2,id,ir) = (((((a(2,i1,i2)*vv(i1+1,i2  ,id,ir)
     &                                + a(3,i1,i2)*vv(i1  ,i2+1,id,ir))
     &                                + a(4,i1,i2)*vv(i1-1,i2+1,id,ir))
     &                                + a(5,i1,i2)*vv(i1-1,i2  ,id,ir))
     &                                + a(6,i1,i2)*vv(i1  ,i2-1,id,ir))
     &                                + a(7,i1,i2)*vv(i1+1,i2-1,id,ir))
               end do
            end do
         end do
      end do
 
      call comm3s(w,nr,nt,1)
 
      do ir=1,nr+1
         do id=1,nd
            do i2=1,nt+1
               do i1=0,nt
                  vv(i1,i2,id,ir) = max(vv(i1,i2,id,ir),
     &                                   w(i1,i2,id,ir)*0.2)
                  vv(i1,i2,id,ir) = min(vv(i1,i2,id,ir),
     &                                   w(i1,i2,id,ir)*5.0)
               end do
            end do
         end do
      end do

	end subroutine


*dk strainrate
	subroutine strainrate(u,gu,wk)
!	This routine computes the second invariant of the rate of strain
!	tensor for use in a power-law rheology model.
 
      include 'size.h'
      real u((nt+1)**2,nd,3,*), gu((nt+1)**2,nd,3,3), wk((nt+1)**2,nr+1)
      common /volm/ vol((nt+1)**2,nr+1,2)
      common /strn/ srate((nt+1)**2,nd,nr+1)
      common /grad/ rg(3,2,nr+1), grd(7,(nt+1)**2,3,2)
      common /ofst/ j1n(7), j2n(7), md(7)
 
      kr = nr/5 - 1
 
      do ir=1,kr+1
 
c        Compute the velocity gradient tensor gu.
 
         call nulvec(gu, (nt+1)**2*nd*9)
 
         k1 = 1
         k2 = 3
         if(ir .eq.    1) k1 = 2
         if(ir .eq. nr+1) k2 = 2
 
         do k=k1,k2
 
            jr = ir + k - 2
 
            do m=1,7
 
               jj   = j1n(m) + (nt+1)*j2n(m)
               ibeg = 1
               iend = (nt + 1)**2
               if(jj .lt. 0) ibeg = 1 - jj
               if(jj .gt. 0) iend = iend - jj
 
               do ii=1,(nt+1)**2
                  wk(ii,1) = grd(m,ii,1,1)*rg(k,1,ir)
     &                     + grd(m,ii,1,2)*rg(k,2,ir)
                  wk(ii,2) = grd(m,ii,2,1)*rg(k,1,ir)
     &                     + grd(m,ii,2,2)*rg(k,2,ir)
                  wk(ii,3) = grd(m,ii,3,1)*rg(k,1,ir)
     &                     + grd(m,ii,3,2)*rg(k,2,ir)
               end do
 
               do j=1,3
                  do id=1,nd
                     do ii=ibeg,iend
                        gu(ii,id,1,j) = gu(ii,id,1,j)
     &                                + wk(ii,1)*u(ii+jj,id,j,jr)
                        gu(ii,id,2,j) = gu(ii,id,2,j)
     &                                + wk(ii,2)*u(ii+jj,id,j,jr)
                        gu(ii,id,3,j) = gu(ii,id,3,j)
     &                                + wk(ii,3)*u(ii+jj,id,j,jr)
                     end do
                  end do
               end do
 
            end do
 
         end do
 
         call rotate(gu,nd,2,nt,-1)
 
         call comm3s(gu,2,nt,3)
 
         do id=1,nd
            do ii=1,(nt+1)**2
               secinv = ((gu(ii,id,1,1)*gu(ii,id,2,2)
     &                  + gu(ii,id,2,2)*gu(ii,id,3,3))
     &                  + gu(ii,id,3,3)*gu(ii,id,1,1))
     &             - (((((gu(ii,id,1,2)**2  + gu(ii,id,2,1)**2)
     &                  + gu(ii,id,1,3)**2) + gu(ii,id,3,1)**2)
     &                  + gu(ii,id,2,3)**2) + gu(ii,id,3,2)**2)*0.5
               srate(ii,id,ir) = sqrt(abs(secinv))
               div = gu(ii,id,1,1) + gu(ii,id,2,2) + gu(ii,id,3,3)
               if(div .lt. 0.) srate(ii,id,ir) = -srate(ii,id,ir)
            end do
         end do
 
      end do
 
      do ir=1,kr+1
         do id=1,nd
            do ii=1,(nt+1)**2
               srate(ii,id,ir) = srate(ii,id,ir)*vol(ii,ir,2) + 1.e-30
            end do
         end do
      end do

	end subroutine


*dk tectos
	subroutine tectos(vv,map2)
!	This subroutine generates a lateral viscosity profile based on
!	3smac model for tectosphere.  irtect is how many layers deep
!	the tectosphere can reach.  The integer mapping for the
!	3-smac model are 1:archean, 2:shield, 3:continent, 8-9:ocean.
 
      include 'size.h'
      real vv((nt+1)**2*nd,*), tecto((nt+1)**2*nd)
      common /call/ ncall

	integer map2(0:nt,nt+1,nd)
	integer i,j,k

      irtect = nr/32*5
 
      do ii=1,(nt+1)**2*nd
			i=mod(ii-1,nt+1)
			j=mod(ceiling(real(ii/(nt+1.0)))-1,nt+1)+1
			k=ceiling(real(ii/(nt+1.0)**2.0))
         if(map2(i,j,k)==1) then
            tecto(ii) = 100.
         elseif(map2(i,j,k)==2) then
            tecto(ii) = 100.
         else
            tecto(ii) = 1.
         end if
      end do
 
      do ir=1,irtect
         rr = 1.
         if(ir .eq. irtect) rr = 0.3*rr
         do ii=1,(nt+1)**2*nd
            vv(ii,ir) = max(vv(ii,ir), rr*tecto(ii))
         end do
      end do

	end subroutine


*dk weakzones
	subroutine weakzones(vv,u,w)
!	This routine applies a plastic yield criterion to weaken the top
!	layers in regions of high stress.
 
      include 'size.h'
      real vv((nt+1)**2*nd,*), w((nt+1)**2*nd,*), u(*)
      common /strn/ srate((nt+1)**2*nd,nr+1)
      common /prop/ ieos,  rho0, visc,  grav,  texpn, tcond,
     &              sheat, hgen, tb(2), cl410, cl660
      common /vis1/ vscmax, rvscscl, tvscscl, pwrlawn, pwrlawsr, yldstrs
      common /vis2/ rdvsc(129), tactv(129), vscl(129)
 
      call strainrate(u,w,w(1,10))
 
      kr = nr/8
 
      srate0 = 0.5*yldstrs/visc
 
c...  Note:  srate0 = edot0*vv(ii,ir), where edot0 is
c...  the strain rate at which yielding first occurs.
 
      do ir=1,kr
         do ii=1,(nt+1)**2*nd
            aa = srate0/abs(srate(ii,ir))
c           if(ir.le.4 .and. aa.gt.0.5*vv(ii,ir)) aa = vv(ii,ir)
            vv(ii,ir) = min(vv(ii,ir), max(0.005*vv(ii,ir), aa))
         end do
      end do

	end subroutine


*dk bdviscos
	blockdata bdviscos
 
	common /vis3/ rvsc(129,5)
 
!	Profile for nr =   8 resolution:
 
	data rvsc/2*100., 10., 1., 10., 124*100.,
 
c...  Profile for nr =  16 resolution:
 
     &         2*50., 3*1., 124*50.,
c    &         2*30., 5.5, 2*1., 1.6, 2.6, 4.1, 6.5, 10.5, 16.8, 26.8,
c    &           43., 60., 60., 20., 20., 112*0.,
 
c...  Profile for nr =  32 resolution:
 
c    &         2*50., 7.0, 6*1., 120*50.,
c    &   50.00,          50.00,           5.00,           1.00,
c    &    1.00,           1.00,           1.00,           1.20,
c    &    2.70,           5.40,           7.00,           9.20,
c    &   12.00,          15.00,          18.20,          22.00,
c    &   26.60,          32.20,          39.00,          47.20,
c    &   55.00,          65.00,          75.00,          85.00,
c    &   95.00,         100.00,         100.00,         100.00,
c    &  100.00,         100.00,          67.00,          40.00,
c    &   30.00,          96*1.,
     &    1.00,           1.00,           1.00,           1.00,
     &    1.00,           1.00,           2.00,           4.00,
     &   8.00,          16.00,         	32.00,         64.00,
     &  100.00,         100.00,         100.00,         100.00,
     &  100.00,         100.00,         100.00,         100.00,
     &  100.00,         100.00,         100.00,         100.00,
     &  100.00,         100.00,         100.00,         100.00,
     &  100.00,         100.00,         100.00,         100.00,
     &  100.00,          96*1.,
 
c...  Profile for nr =  64 resolution:
 
c    &       2*100., 50., 7., 11*1., 3., 10., 112*100.,
     & 	1.00, 	1.0,	1.00, 	1.00,  1.00,   1.00,   1.00,   1.00,
     &    1.00,   1.00,   1.00,   1.00,   2.00,   5.00,  10.00,  20.00,
     &   40.00,  80.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100.00,
     &  100.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100.00,
     &  100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,
     & 100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,
     & 100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,
     & 100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,
     & 100.00,  64*1.,
c    &  180.000,160.000,140.000,120.000,100.000, 30.000, 10.000,  1.000,
c    &    1.000, 64*1.,
c    &  500.00, 500.00, 150.00,  30.00,   6.00,   2.00,   1.00,   1.00,
c    &  100.00, 100.00,  50.00,  10.00,   3.00,   1.00,   1.00,   1.00,
c    &    1.00,   1.00,   1.00,   1.00,   1.00,   1.00,   1.00,   3.00,
c    &   10.00,  30.00,  70.00, 100.00, 100.00, 100.00, 100.00, 100.00,
c    &  100.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100.00,
c    &  100.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100.00,
c    &  100.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100.00,
c    &  100.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100.00,
c    &  100.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100.00,
c    &  100.00, 100.00, 100.00, 100.00, 100.00,  20.00,   5.00,   1.00,
c    &  100.00,  64*1.,
c    &   50.000,  50.00, 50.000, 20.000,  8.000,  2.000,  1.000,  1.000,
c    &    1.000,  1.000,  1.000,  1.000,  1.500,  6.000, 25.000, 40.000,
c    &   40.000, 40.000, 40.000, 40.000, 40.000, 40.000, 40.000, 40.000,
c    &   40.000, 40.000, 40.000, 40.000, 40.000, 40.000, 40.000, 40.000,
c    &   40.000, 40.000, 40.000, 40.000, 40.000, 40.000, 40.000, 40.000,
c    &   40.000, 40.000, 40.000, 40.000, 40.000, 40.000, 40.000, 40.000,
c    &   40.000, 40.000, 40.000, 40.000, 40.000, 40.000, 40.000, 40.000,
c    &   40.000, 40.000, 40.000, 40.000, 40.000, 40.000, 10.000,  1.000,
c    &    1.000, 64*1.,
 
c...  Profile for nr = 128 resolution:
 
c    &        2*100., 50.,  7., 32*1., 7., 50., 91*100./
c    &  100.00, 100.00,  60.00,  37.00,  25.00,  17.50,  10.00,   7.00,
c    &    3.00,   2.00,   1.50,   1.25,   1.00,   1.00,   1.00,   1.00,
c    &    1.00,   1.00,   1.00,   1.00,   1.00,   1.00,   1.00,   1.00,
c    &    1.00,   1.00,   1.00,   1.00,   1.20,   1.50,   1.80,   2.25,
c    &    2.70,   3.20,   3.80,   4.30,   4.90,   5.50,   6.00,   6.60,
c    &    7.00,   7.50,   8.00,   8.60,   9.20,   9.90,  10.60,  11.30,
c    &   12.00,  12.70,  13.50,  14.20,  15.00,  15.70,  16.50,  17.20,
c    &   18.10,  19.00,  20.00,  21.00,  22.00,  23.10,  24.20,  25.30,
c    &   26.60,  27.90,  29.30,  30.70,  32.20,  33.80,  35.40,  37.20,
c    &   39.00,  40.90,  42.90,  45.00,  47.50,  50.00,  52.50,  55.00,
c    &   57.50,  60.00,  62.50,  65.00,  67.50,  70.00,  72.50,  75.00,
c    &   77.50,  80.00,  82.50,  85.00,  87.50,  90.00,  92.50,  95.00,
c    &  100.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100.00,
c    &  100.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100.00,
c    &  100.00, 100.00, 100.00, 100.00, 100.00,  95.00,  85.00,  75.00,
c    &   65.00,  57.50,  50.00,  45.00,  40.00,  35.00,  30.00,  25.00,
c    &   25.00/
     
c... ADJOINT viscosity profile, A. Horbach, S. Grand, 08.12.2010
c	Version II, "the good one"
c     &  100.000,100.000,100.000, 50.000, 20.000, 10.000,  5.000,  3.000,
c     &    1.500,  1.250,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.200,  1.500,  3.000, 6.000, 12.000, 24.000,
c     &  48.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000/
          
c... ADJOINT viscosity profile, A. Horbach, modified after B.Kennett,
c	13.01.2012, smaller viscosity channel, 10^20
     &  100.000,100.000, 50.000, 25.000, 15.000, 8.000,  4.000,  2.000,
     &    1.000,  0.500,  0.250,  0.150,  0.100,  0.100,  0.100,  0.100,
     &    0.200,  0.400,  0.800,  1.000,  1.000,  1.000,  2.000,  4.000,
     &   8.000, 15.000, 15.000, 25.000, 50.000,100.000,100.000,100.000,
     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
     &  100.000/
     
c... FREE-SLIP-TEST viscosity profile, A. Horbach, S. Grand, 08.12.2010
c	Version II, "the good one"
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.200,  1.500,  3.000, 6.000, 12.000, 24.000,
c     &  48.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000,100.000,100.000,100.000,100.000,100.000,100.000,100.000,
c     &  100.000/
    
c... ADJOINT test profile, A.Horbach, 10^22 Pas in the deep mantle
c     &  100.000,100.000,100.000, 50.000, 20.000, 10.000,  5.000,  3.000,
c     &    1.500,  1.250,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.200,  1.500,  3.000,
c     &    6.000, 10.000, 10.000, 10.000,10.000,10.000,10.000,10.000,
c     &  10.000,10.000,10.000,10.000,10.000,10.000,10.000,10.000,
c     &  10.000,10.000,10.000,10.000,10.000,10.000,10.000,10.000,
c     &  10.000,10.000,10.000,10.000,10.000,10.000,10.000,10.000,
c     &  10.000,10.000,10.000,10.000,10.000,10.000,10.000,10.000,
c     &  10.000,10.000,10.000,10.000,10.000,10.000,10.000,10.000,
c     &  10.000,10.000,10.000,10.000,10.000,10.000,10.000,10.000,
c     &  10.000,10.000,10.000,10.000,10.000,10.000,10.000,10.000,
c     &  10.000,10.000,10.000,10.000,10.000,10.000,10.000,10.000,
c     &  10.000,10.000,10.000,10.000,10.000,10.000,10.000,10.000,
c     &  10.000,10.000,10.000,10.000,10.000,10.000,10.000,10.000,
c     &  10.000,10.000,10.000,10.000,10.000,10.000,10.000,10.000,
c     &  10.000/
     
c... ADJOINT test profile II, A.Horbach, 10^21 Pas in the deep mantle
c     &  100.000,100.000,100.000, 50.000, 20.000, 10.000,  5.000,  1.000,
c     &    3.000,  1.250,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &    1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,  1.000,
c     &  1.000/

c... ADJOINT profile, A.Horbach, Simmons/Forte without "kink"
c     &  	10.0, 5.0, 2.5, 1.25, 0.6, 0.3, 0.25, 0.3,
c     &  	0.3, 0.35, 0.35, 0.42, 0.42, 0.55, 0.55, 0.7,
c     &  	0.7, 0.75, 0.75, 0.8, 0.8, 0.9, 0.9, 0.9,
c     &  	0.9, 1.1, 1.3, 1.5, 2.0, 2.0, 2.0, 2.0,
c     &  	2.0, 2.0, 3.5, 5.0, 6.0, 6.0, 6.0, 6.0,
c     &  	6.0, 6.0, 7.5, 9.0, 10.0, 10.0, 10.0, 10.0,
c     &  	10.0, 10.0, 12.5, 15.0, 17.0, 17.0, 17.0, 17.0,
c     &  	23.0, 29.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0,
c     &  	47.0, 55.0, 60.0, 60.0, 65.0, 70.0, 75.0, 75.0,
c     &  	75.0, 75.0, 75.0, 75.0, 130.0, 180.0, 225.0, 225.0,
c     &  	225.0, 225.0, 225.0, 225.0, 225.0, 225.0, 225.0, 225.0,
c     &  	180.0, 130.0, 85.0, 85.0, 85.0, 85.0, 55.0, 30.0,
c     &  	15.0, 15.0, 15.0, 15.0, 13.0, 11.0, 7.5, 7.5,
c     &  	7.5, 7.5, 7.5, 5.0, 5.0, 5.0, 5.0, 5.0,
c     &  	5.0, 5.0, 3.5, 2.5, 2.0, 2.0, 2.0, 1.25,
c     &  	1.25, 1.25, 1.25, 0.75, 0.75, 0.75, 0.75, 0.75,
c     &  	0.75/

	end blockdata

